name: "Build"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  npm:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.17.0

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-deps-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

      - name: Pack
        id: pack
        if: github.event_name == 'pull_request'
        run: |
          ./scripts/pack.sh 2>&1 | tee npm-pack-output.log
          output="$(cat npm-pack-output.log)"
          output="${output//'%'/'%25'}"
          output="${output//$'\n'/'%0A'}"
          output="${output//$'\r'/'%0D'}"
          echo "::set-output name=stdout::$output"

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### npm pack ðŸ“¦ \`${{ steps.pack.outcome }}\`

            \`\`\`\n
            ${{ steps.pack.outputs.stdout }}
            \`\`\`

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Publish to npm
        if: endsWith(github.ref, '/main') && github.event_name == 'push'
        run: ./scripts/publish.sh
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
